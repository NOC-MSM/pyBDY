name: on-push

on:
  push:
    branches:
    - master
    tags:
    - '*'
  pull_request:
    branches:
    - master

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash -l {0}

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      with:
        python-version: 3.11
    - uses: pre-commit/action@v3.0.1

  combine-environments:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
    - name: Install conda-merge
      run: |
        $CONDA/bin/python -m pip install conda-merge
    - name: Combine environments
      run: |
        for SUFFIX in ci integration; do
        $CONDA/bin/conda-merge ci/environment-$SUFFIX.yml environment.yml > ci/combined-environment-$SUFFIX.yml || exit
        done
    - name: Archive combined environments
      uses: actions/upload-artifact@v4
      with:
        name: combined-environments
        path: ci/combined-environment-*.yml

  unit-tests:
    name: unit-tests
    needs: combine-environments
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9']

    steps:
    - uses: actions/checkout@v4
    - name: Download combined environments
      uses: actions/download-artifact@v4
      with:
        name: combined-environments
        path: ci
    - name: Install Conda environment with Micromamba
      uses: mamba-org/setup-micromamba@v1
      with:
        environment-file: ci/combined-environment-ci.yml
        environment-name: DEVELOP
        cache-environment: true
        create-args: >-
          python=${{ matrix.python-version }}
    - name: Install package
      run: |
        python -m pip install --no-deps -e .
    - name: Run tests
      run: |
        make unit-tests COV_REPORT=xml

  # type-check:
  #   needs: [combine-environments, unit-tests]
  #   runs-on: ubuntu-latest

  #   steps:
  #   - uses: actions/checkout@v4
  #   - name: Download combined environments
  #     uses: actions/download-artifact@v4
  #     with:
  #       name: combined-environments
  #       path: ci
  #   - name: Install Conda environment with Micromamba
  #     uses: mamba-org/setup-micromamba@v1
  #     with:
  #       environment-file: ci/combined-environment-ci.yml
  #       environment-name: DEVELOP
  #       cache-environment: true
  #       create-args: >-
  #         python=3.9
  #   - name: Install package
  #     run: |
  #       python -m pip install --no-deps -e .
  #   - name: Run code quality checks
  #     run: |
  #       make type-check

  docs-build:
    jobs:
      deploy:
        runs-on: ubuntu-latest
        steps:
        - uses: actions/checkout@v4
        - name: Configure Git Credentials
          run: |
            git config user.name github-actions[bot]
            git config user.email 41898282+github-actions[bot]@users.noreply.github.com
        - uses: actions/setup-python@v5
          with:
            python-version: 3.x
        - run: echo "cache_id=$(date --utc '+%V')" >> $GITHUB_ENV
        - uses: actions/cache@v4
          with:
            key: mkdocs-material-${{ env.cache_id }}
            path: .cache
            restore-keys: |
              mkdocs-material-
        - run: pip install mkdocs-material mkdocs-glightbox
        - working-directory: ./
          run: mkdocs gh-deploy --force

  integration-tests:
    needs: [combine-environments, unit-tests]
    if: |
      success() && true
    runs-on: ubuntu-latest

    strategy:
      matrix:
        include:
        - python-version: '3.9'
          extra: -integration

    steps:
    - uses: actions/checkout@v4
    - name: Download combined environments
      uses: actions/download-artifact@v4
      with:
        name: combined-environments
        path: ci
    - name: Install Conda environment with Micromamba
      uses: mamba-org/setup-micromamba@v1
      with:
        environment-file: ci/combined-environment${{ matrix.extra }}.yml
        environment-name: DEVELOP${{ matrix.extra }}
        cache-environment: true
        create-args: >-
          python=${{ matrix.python-version }}
    - name: Install package
      run: |
        python -m pip install --no-deps -e .
    - name: Run tests
      run: |
        make unit-tests COV_REPORT=xml

  # distribution:
  #   runs-on: ubuntu-latest
  #   needs: [unit-tests, type-check, docs-build, integration-tests]
  #   if: |
  #     always() &&
  #     needs.unit-tests.result == 'success' &&
  #     needs.type-check.result == 'success' &&
  #     needs.docs-build.result == 'success' &&
  #     (needs.integration-tests.result == 'success' || needs.integration-tests.result == 'skipped')

  #   steps:
  #   - uses: actions/checkout@v4
  #   - name: Install packages
  #     run: |
  #       $CONDA/bin/python -m pip install build twine
  #   - name: Build distributions
  #     run: |
  #       $CONDA/bin/python -m build
  #   - name: Check wheels
  #     run: |
  #       cd dist || exit
  #       $CONDA/bin/python -m pip install pybdy*.whl || exit
  #       $CONDA/bin/python -m twine check * || exit
  #       $CONDA/bin/python -c "import pybdy"
  #   - name: Publish a Python distribution to PyPI
  #     if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
  #     uses: pypa/gh-action-pypi-publish@release/v1
  #     with:
  #       user: __token__
  #       password: ${{ secrets.PYPI_API_TOKEN }}
